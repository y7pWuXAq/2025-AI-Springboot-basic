project-root/
├── backend/                  # Spring Boot 백엔드 루트 디렉토리
│   ├── src/
│   │   ├── main/
│   │   │   ├── java/com/pknu/project/   # 자바 코드의 루트 패키지
│   │   │   │   ├── controller/             # REST API 엔드포인트 정의(URL 매핑 - 요청 처리 진입점)
│   │   │   │   ├── service/                # 비즈니스 로직 처리 계층
│   │   │   │   ├── repository/             # 데이터베이스 접근 계층
│   │   │   │   ├── model/                  # 엔티티 및 DTO 정의
│   │   │   │   └── config/                 # 설정 클래스들 (CORS, JPA 등)
│   │   │   └── resources/  
│   │   │       └── application.properties  # DB 설정 및 Spring 설정
│   └── pom.xml                             # Maven 프로젝트 설정 파일
├── frontend/                               # React 프론트엔드 루트 디렉토리
│   ├── public/                             # 정적 리소스 (index.html 포함)
│   └── src/                
│       ├── components/                     # 공통 컴포넌트들
│       ├── pages/                          # 각 화면 페이지 컴포넌트
│       ├── services/                       # API 통신 관련 모듈
│       └── App.js                          # 메인 라우팅 및 앱 초기화
├── database/               
│   └── schema.sql                          # Oracle DB용 초기 테이블 스크립트
└── README.md                               # 프로젝트 설명 파일



----------------------------------


<스프링부트 프레임워크 백엔드 폴더 구조 생성하기>
backend/
└── src/ (최초 자동 생성된 폴더)
    └── main/ (최초 자동 생성된 폴더)
    |    ├── java/ (최초 자동 생성된 폴더)
    |    │   └── com/ (최초 자동 생성된 폴더)
    |    │       └── pknu/ (최초 자동 생성된 폴더)
    |    │           └── project/ (최초 자동 생성된 폴더)
    |    │               ├── controller/ (수동 생성)
    |    │               │   └── MemberController.java  (URL 매핑 - 요청 처리 진입점)
    |    │               ├── service/ (수동 생성)
    |    │               │   └── MemberService.java
    |    │               ├── repository/ (수동 생성)
    |    │               │   └── MemberRepository.java
    |    │               ├── model/ (수동 생성)
    |    │               │   └── Member.java
    |    │               ├── config/ (수동 생성)
    |    │               │   └── WebSecurityConfig.java
    |    │               │
    |    │               └── ProjectApplication.Java (최초 자동 생성된 파일)
    |    └── resources/ (최초 자동 생성된 폴더)
    |        └── application.properties (최초 자동 생성된 파일 - DB 계정 및 비번 등 설정)
    |     
    |── mvnw (최초 자동 생성된 파일 - 스프링부트 웹서버 실행시 사용됨)
    |
    └── pom.xml (최초 자동 생성된 파일 - 디펜던시 설정 파일)



----------------------------------


<React 프론트엔드 폴더 구조>
frontend/
└── src/
    ├── components/
    │   └── MemberList.js
    ├── services/
    │   └── memberService.js
    ├── App.js
    └── index.js



-------------------------------------


전체 프로그램 개발 순서 (예시 파일명 포함)

------------------------------------------------------------------------------
순서	개발 대상	          예시 파일명	                        설명
------------------------------------------------------------------------------
1	    데이터베이스	    schema.sql	                Oracle용 테이블 생성 SQL
2	    모델 정의	        User.java	                model/ 내 엔티티 클래스
3	    레포지토리 생성	    UserRepository.java	        JPA 인터페이스
4	    서비스 로직 작성	UserService.java	        사용자 관련 비즈니스 로직
5	    컨트롤러 작성	    UserController.java	        REST API 엔드포인트 (백엔드 진입점)
6	    설정 파일	        application.properties	    DB 연결, CORS 등 설정
7	    프론트엔드 초기화	App.js, UserPage.js	        React 앱 및 페이지 구성
8	    컴포넌트 작성	    UserForm.js, UserList.js	입력/목록 표시 컴포넌트
9	    API 연동	        userService.js	            Axios를 이용한 통신 로직
------------------------------------------------------------------------------